# Configuration file
# key = value
# configure your datasource
%prod.quarkus.datasource.url=jdbc:postgresql://postgres-database/person
%prod.quarkus.datasource.driver=org.postgresql.Driver
%dev.quarkus.datasource.url=jdbc:h2:mem:person
%dev.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.url=jdbc:h2:mem:person
%test.quarkus.datasource.driver=org.h2.Driver

quarkus.datasource.username=sa
quarkus.datasource.password=sa

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

database.up=true
quarkus.swagger-ui.always-include=true

# Configure the Kafka sink (we write to it)
%prod.mp.messaging.outgoing.generated-name.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.outgoing.generated-name.connector=smallrye-kafka
%prod.mp.messaging.outgoing.generated-name.topic=names
%prod.mp.messaging.outgoing.generated-name.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# Configure the Kafka source (we read from it)
%prod.mp.messaging.incoming.names.bootstrap.servers=names-cluster-kafka-bootstrap:9092
%prod.mp.messaging.incoming.names.connector=smallrye-kafka
%prod.mp.messaging.incoming.names.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


%prod.quarkus.jaeger.service-name=people
%prod.quarkus.jaeger.sampler-type=const
%prod.quarkus.jaeger.sampler-param=1
%prod.quarkus.jaeger.endpoint=http://jaeger-all-in-one-inmemory-collector:14268/api/traces
